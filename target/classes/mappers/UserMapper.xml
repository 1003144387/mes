<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crsri.mes.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.crsri.mes.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="dept_id" property="deptId" jdbcType="BIGINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, username, dept_id, phone, password, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crsri.mes.entity.User" >
    insert into t_user (id, user_id, username, 
      dept_id, phone, password, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{deptId,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.crsri.mes.entity.User" useGeneratedKeys="true">
		insert into t_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="deptId != null">
				dept_id,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="password != null">
				password,
			</if>
			create_time,
			update_time
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="deptId != null">
				#{deptId,jdbcType=BIGINT},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			now(),now()
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.crsri.mes.entity.User">
		update t_user
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="deptId != null">
				dept_id = #{deptId,jdbcType=BIGINT},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.crsri.mes.entity.User">
		update t_user
		set user_id = #{userId,jdbcType=VARCHAR},
		username = #{username,jdbcType=VARCHAR},
		dept_id = #{deptId,jdbcType=BIGINT},
		phone = #{phone,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectUserByPhone" parameterType="string" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user
		where phone=#{phone}
	</select>
	<select id="selectUserAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user order by id
	</select>
	<select id="selectUserByUserId" parameterType="string" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user
		where user_id =#{userId}
	</select>
	<select id="queryUserByName" parameterType="string" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user
		where username =#{username}
	</select>
</mapper>