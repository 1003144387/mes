<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crsri.mes.dao.RolePermissionMapper">
	<resultMap id="BaseResultMap"
		type="com.crsri.mes.entity.RolePermission">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="permission_id" property="permissionId"
			jdbcType="INTEGER" />
		<result column="create_time" property="createTime"
			jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, role_id, permission_id, create_time, update_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_role_permission
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from t_role_permission
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByRoleId" parameterType="java.lang.Integer">
		delete from t_role_permission
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.crsri.mes.entity.RolePermission">
		insert into t_role_permission (id, role_id, permission_id,
		create_time, update_time)
		values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER},
		#{permissionId,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective"
		parameterType="com.crsri.mes.entity.RolePermission">
		insert into t_role_permission
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
			<if test="permissionId != null">
				permission_id,
			</if>
			create_time,
			update_time
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="permissionId != null">
				#{permissionId,jdbcType=INTEGER},
			</if>
			now(),now()
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.crsri.mes.entity.RolePermission">
		update t_role_permission
		<set>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="permissionId != null">
				permission_id = #{permissionId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.crsri.mes.entity.RolePermission">
		update t_role_permission
		set role_id = #{roleId,jdbcType=INTEGER},
		permission_id = #{permissionId,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="queryRoleIdByPermissionId" parameterType="int" resultType="int">
		select 
		role_id
		from t_role_permission
		where permission_id = #{permissionId,jdbcType=INTEGER}
	</select>
</mapper>